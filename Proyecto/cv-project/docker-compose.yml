services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: cv-database
    environment:
      - POSTGRES_DB=cvproject
      - POSTGRES_USER=cvuser
      - POSTGRES_PASSWORD=cvpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - cv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cvuser -d cvproject"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend Flask API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cv-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - DATABASE_URL=postgresql://cvuser:cvpassword@db:5432/cvproject
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_your_stripe_secret_key_here}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY:-pk_test_your_stripe_publishable_key_here}
      - SECRET_KEY=${SECRET_KEY:-your_secret_key_change_in_production}
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cv-frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - cv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  cv-network:
    driver: bridge
    name: cv-project-network

volumes:
  postgres_data:
    name: cv-postgres-data
